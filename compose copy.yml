#1番上の階層、決まり文句のようなもの
services:
  #2番目の階層、作りたいコンテナを定義する。任意の名前を付けられる。
  php-app:
    #コンテナの名前(任意の名前)
    container_name: run-php-app
    #ビルドするDockerfileの場所(相対パス)
    build: ./app
    #ポート
    ports:
      - "18080:80"
    #ローカルPCとコンテナ間でディレクトリをバインド(同期)できる
    volumes:
      - ./app/src:/var/www/html/
    #利用するネットワーク(名前は任意)
    networks:
      - php-mysql-networks
    #指定したサービスの後にコンテナを起動する(先にデータベースを起動する)
    depends_on:
      - php-db
  php-db:
    image: mysql:8.0
    container_name: run-php-db
    ports:
      - "3307:3306"
    #コンテナの環境変数を指定できる
    enviroment:
      - MYDQL_ROOT_PASSWORD=root
      - MYSQL_USER=test
      - MYSQL_PASSWORD=test
      - MYSQL_DATABASE=test_db
    #右のパスにsqlを置くと自動で実行してくれる、2行目で永続化(コンテナが消えてもデータが残る)
    volumes:
      - ./mysql/initdb.d:/docker-entrypoint-initdb.d
      - mysql-data:/var/lib/mysql
    networks:
      - php-mysql-networks
  php-adminer:
    image: adminer:4.8.1
    container_name: adminer
    ports:
      - "8081:8080"
    networks:
      - php-mysql-networks
    depends_on:
      - php-db

volumes:
  mysql-data:

networks:
  php-mysql-networks: